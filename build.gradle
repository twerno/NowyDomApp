plugins {
  id "com.moowork.node" version "1.3.1"
}

ext.getBuildConfig = { ->

    def installNode = project.hasProperty('installNode') ? project.property('installNode') == 'true' : false
    def buildConfig = [installNode: installNode]

    return buildConfig
}

ext.buildConfig = getBuildConfig()

node {
  download = buildConfig.installNode
  version = '10.16.0'
  
  // Set the work directory for unpacking node
  workDir = file("${project.buildDir}/nodejs")

  // Set the work directory where node_modules should be located
  nodeModulesDir = file("${project.projectDir}")
}

npm_install {
  args = ['--no-optional']
}

task clean(type: Delete) {
	delete 'dist', 'build', 'lambda.zip'
}

task build(type: NpmTask, dependsOn: ['clean', 'npmInstall']) { 

  environment = [
    'APP_VERSION': version
  ]
  
  args = ['run', 'build']
}

task buildLambda(type: Zip, dependsOn: ['build']) {
  archiveFileName = "lambda.zip"
  destinationDirectory = file("./")

  from ("${project.projectDir}/dist") {
    into "dist"
  }
  from("${project.projectDir}/node_modules") {
    exclude "typescript"
    into "node_modules"
  }
  from("${project.projectDir}/package.json") {
  }
}

task uploadLambda(type: Exec, dependsOn: ['buildLambda']) {
  workingDir './'
  
  commandLine 'aws', 'lambda', 'update-function-code', '--function-name', 'nowyDomUpd', '--zip-file', 'fileb://lambda.zip'
}